# {{ ansible_managed }}

{# Set up machine #}
{% for machine in shell_git %}
[user]
{% if machine.shell_git_email is defined %}
	email = {{ machine.shell_git_email }}
{% endif %}
{% if machine.shell_git_name is defined %}
	name = {{ machine.shell_git_name }}
{% endif %}
{% if machine.shell_git_signingkey is defined %}
	signingkey = {{ machine.shell_git_signingkey }}
{% endif %}
[pull]
	rebase = true
[core]
{% if shell_git_autocrlf is defined %}
    autocrlf = "{{ shell_git_autocrlf }}"
{% endif %}
{% if shell_git_longpaths is defined %}
    longpaths = "{{ shell_git_longpaths }}"
{% endif %}
{% if machine.shell_git_editor is defined %}
	editor = {{ machine.shell_git_editor }}
{% endif %}
	excludesfile = {{ home }}/.gitignore
	whitespace = trailing-space,-space-before-tab,indent-with-non-tab,cr-at-eol
[credential]
#	helper = cache --timeout=86400
	helper = store
[alias]
	co = checkout
	br = branch
	ci = commit
	st = status
	pl = pull â€”rebase
	di = diff --ignore-space-at-eol -b -w
	lo = log --graph
	unstage = reset HEAD --
	last = log -1 HEAD
[fetch]
	prune = true
[help]
	autocorrect = 8
[color]
	ui = auto
[branch "main"]
	rebase = true
[branch "master"]
	rebase = true
[branch]
	autosetuprebase = always
[diff "xls"]
    binary = true
    textconv = /usr/bin/py_xls2txt
#    textconv = /usr/bin/xls2csv
[diff "pdf"]
    binary = true
    textconv = /usr/bin/pdf2txt
[diff "doc"]
    binary = true
    textconv = /usr/bin/catdoc
[diff "docx"]
    binary = true
    textconv = /usr/bin/docx2txt
[diff "odt"]
    binary = true
    textconv = odt2txt
[diff "ppt"]
    binary = true
    textconv = /usr/bin/catppt
[diff "zip"]
    textconv = unzip -c -a
{% if machine.shell_git_meld_enabled %}
[merge]
    tool = meld
[mergetool "meld"]
    # Choose one of these 2 lines (not both!) explained below.
    #cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
    cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
[diff]
#	external = /usr/local/bin/git-diff.sh
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
{% endif %}
{% if shell_git_maildomain is defined %}
[maven-scm]
  maildomain = "{{ shell_git_maildomain }}"
  forceUsername = true
{% endif %}
[http]
{% if shell_git_ssl is defined %}
    sslverify = "{{ shell_git_ssl }}"
{% endif %}
[init]
	templateDir = {{ home }}/.git-template
	defaultBranch = master
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[rerere]
	enabled = true
[push]
	default = simple
[commit]
	gpgsign = true
{% endfor %}
