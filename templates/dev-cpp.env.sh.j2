#!/bin/bash
#set -xv
#shopt -s extglob

# {{ ansible_managed }}

##set -ueo pipefail
#set -eo pipefail

WORKING_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "${HOME}/step-0-color.sh"

TOOLS_OPTION_PURIFY=""
export PERLGEN_OPTION=""
typeset PURIFY=$1
if [ "$1" != "" ]; then

  case "$1" in
    purify)
      TOOLS_OPTION_PURIFY="purify"

      export PERLGEN_OPTION="-p"
      ;;

    *)
      DATABASE_CONFIG=$1
      ;;

  esac

fi
###################


###
# THIRDPARTIES
###
#export ORB_VERSION=1_3
#export ORB=tao
#
#if [ "${ARCH}" = winnt -o "${ARCH}" = cygwin ]
#then
#  export CORBA_ROOT=${PROJECT_THIRDPARTY_PATH}/tao
#  export ACE_ROOT=${CORBA_ROOT}/ACE_wrappers
#
#  TAO_ROOT=${ACE_ROOT}/tao
#  export TAO_ROOT
#
#  MPC_ROOT=${ACE_ROOT}/MPC
#  export MPC_ROOT
#
#  CIAO_ROOT=${TAO_ROOT}/CIAO
#  export CIAO_ROOT
#
#  DANCE_ROOT=${CIAO_ROOT}/DANCE
#  export DANCE_ROOT
#
#  DDS_ROOT=${CIAO_ROOT}/connectors/dds4ccm
#  export DDS_ROOT
#
#else
#  export CORBA_ROOT=${PROJECT_THIRDPARTY_PATH}/tao
#  export ACE_ROOT=${PROJECT_THIRDPARTY_PATH}/ACE/ACE_wrappers
#
#  TAO_ROOT=${ACE_ROOT}/TAO
#  export TAO_ROOT
#
#  MPC_ROOT=${ACE_ROOT}/MPC
#  export MPC_ROOT
#
#  CIAO_ROOT=${PROJECT_THIRDPARTY_PATH}/CIAO
#  export CIAO_ROOT
#
#  DANCE_ROOT=${CIAO_ROOT}/DAnCE
#  export DANCE_ROOT
#
#  DDS_ROOT=${CIAO_ROOT}/connectors/dds4ccm
#  export DDS_ROOT
#fi

#echo -e "${cyan} ACE_ROOT : ${ACE_ROOT} ${NC}"
#echo -e "${cyan} TAO_ROOT : ${TAO_ROOT} ${NC}"
#echo -e "${cyan} MPC_ROOT : ${MPC_ROOT} ${NC}"
#echo -e "${cyan} CIAO_ROOT : ${CIAO_ROOT} ${NC}"
#echo -e "${cyan} DANCE_ROOT : ${DANCE_ROOT} ${NC}"
#echo -e "${cyan} DDS_ROOT : ${DDS_ROOT} ${NC}"

export BOOST_VERSION={{BOOST_VERSION}}
export GETTEXT_VERSION={{GETTEXT_VERSION}}
export XERCES_VERSION={{XERCES_VERSION}}
export XML2_VERSION={{XML2_VERSION}}
export TIBCO_VERSION={{TIBCO_VERSION}}
export TIBRV_VERSION={{TIBRV_VERSION}}

if [ "${ARCH}" = winnt -o "${ARCH}" = cygwin ]; then
  export MINGW_ROOT=${DRIVE_PATH}/MinGW

  export BOOST_ROOT=${PROJECT_THIRDPARTY_PATH}/boost/${BOOST_VERSION}
else
  export BOOST_ROOT=/usr/include
fi
export BOOST=$BOOST_ROOT


# SCONS {{SCONS_MAJOR_VERSION}}
#export SCONS_DIR=${PYTHON_DIR}/Lib/site-packages/scons-{{SCONS_MAJOR_VERSION}}
export SCONS_DIR={{SCONS_DIR}}

# ALIAS to scons-local
# Disable alias scons since we are using https://pypi.org/project/virtualenvwrapper/
#export SCONS='{{SCONS_ALIAS}}'

export SCONS_PATH={{SCONS_PATH}}
if [ "$SCONS_PATH" = "" ]; then
  echo -e "${yellow} ${double_arrow} Undefined parameter ${head_skull} : SCONS_PATH, use the default one ${NC}"
else
  export PATH=${SCONS_PATH}:${PATH}
fi

#CORBA TAO
#export PATH=${PATH}:${ACE_ROOT}/tao:${ACE_ROOT}/bin:${ACE_ROOT}/lib:${ACE_ROOT}/TAO/orbsvcs
#if [ -d "${MPC_ROOT}" ] ; then
#    PATH="${MPC_ROOT}:$PATH"
#fi
#if [ -d "${CIAO_ROOT}" ] ; then
#    PATH="${CIAO_ROOT}:$PATH"
#fi
#if [ -d "${DANCE_ROOT}" ] ; then
#    PATH="${DANCE_ROOT}:$PATH"
#fi
#if [ -d "${DDS_ROOT}" ] ; then
#    PATH="${DDS_ROOT}:$PATH"
#fi
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ACE_ROOT}/tao:${ACE_ROOT}/lib:${ACE_ROOT}/TAO/orbsvcs:${MPC_ROOT}:${CIAO_ROOT}:${DANCE_ROOT}:${DDS_ROOT}

# ECLIPSE {{ECLIPSE_VERSION}}
export ECLIPSE_HOME={{ECLIPSE_HOME}}
if [ "${ARCH}" = winnt -o "${ARCH}" = cygwin ]; then
  export PATH=${ECLIPSE_HOME}:$PATH
  alias eclipse='${ECLIPSE_HOME}/eclipse'
else
  export ECLIPSE_HOME=${DRIVE_PATH}/eclipse
fi

if [ "${ARCH}" = winnt -o "${ARCH}" = cygwin ]; then
  #ln -s ${DRIVE_PATH}/MagicDraw\ UML\ 16.5 /MagicDrawUML16.5
  export MD_HOME={{MD_HOME}}
fi
#export ANDROMDA_HOME=${DRIVE_PATH}/repo/org/andromda

# TIBCO
#export TIBCO_HOME={{TIBCO_HOME}}
#export TIBRV_HOME={{TIBRV_HOME}}
#export PATH=${TIBRV_HOME}/bin:${PATH}
#export LD_LIBRARY_PATH=/usr/local/lib:${LD_LIBRARY_PATH}:${TIBRV_HOME}/lib

# TIZEN
# Add the directory of Tizen .NET Command Line Tools to user path.
#export PATH=$HOME/tizen-studio/tools/ide/bin:$PATH
## Tizen SDK configuration
# This is generated by Tizen SDK. Please do not modify by yourself.
#export PATH=$PATH:$HOME/tizen-studio/platforms/tizen-5.0/common/tidl
## End Tizen SDK configuration

# Make a directory with link to several libraries for LIBPATH length restriction
#################################################################################
LIB_LINK_DIR="${PROJECT_TARGET_PATH}/lib/${ARCH}"
#echo -e "${cyan} LIB_LINK_DIR : ${LIB_LINK_DIR} ${NC}"
test ! -d ${LIB_LINK_DIR} && mkdir -p ${LIB_LINK_DIR}
#\rm -f ${LIB_LINK_DIR}/* |& cat >/dev/null
#rm -f ${LIB_LINK_DIR}/*

#ln -s ${PROJECT_THIRDPARTY_PATH}/boost/${BOOST_VERSION}/lib/${ARCH}/opt/shared ${LIB_LINK_DIR}/boost
#ln -s ${PROJECT_THIRDPARTY_PATH}/cppunit/${CPPUNIT_VERSION}/${ARCH}/lib ${LIB_LINK_DIR}/cppunit
#ln -s ${PROJECT_THIRDPARTY_PATH}/gnu/gettext/${GETTEXT_VERSION}/${ARCH}/lib ${LIB_LINK_DIR}/gettext
#ln -s ${PROJECT_THIRDPARTY_PATH}/xml/xerces/c++/${XERCES_VERSION}/${ARCH}/lib ${LIB_LINK_DIR}/xerces
#ln -s ${PROJECT_THIRDPARTY_PATH}/libxml2/${XML2_VERSION}/${ARCH}/lib ${LIB_LINK_DIR}/xml2
#ln -s ${PROJECT_THIRDPARTY_PATH}/tibco/tibrv/${TIBRV_VERSION}/${ARCH}/lib ${LIB_LINK_DIR}/tibrv

#ln -s ${PROJECT_THIRDPARTY_PATH}/database/sybase/openclient/12.51/ESD_17/${ARCH}/lib ${LIB_LINK_DIR}/sybase


#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/tibrv
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/sybase
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/oracle
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/boost
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/cppunit
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/gettext
#export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIB_LINK_DIR}/xerces

#CORBA TAO
#if [ "$ORB" = "tao" ]
#  export MPC_ROOT=${DRIVE_PATH}/thirdparty/tao/ACE_wrappers/MPC
#  export CIAO_ROOT=${DRIVE_PATH}/thirdparty/tao/ACE_wrappers/TAO/CIAO
#  export DANCE_ROOT=${DRIVE_PATH}/thirdparty/tao/ACE_wrappers/TAO/CIAO/DANCE
#  export DDS_ROOT=${DRIVE_PATH}/thirdparty/tao/ACE_wrappers/TAO/CIAO/connectors/dds4ccm
#  export PATH=${PATH}:${ACE_ROOT}/tao:${ACE_ROOT}/bin:${ACE_ROOT}/lib:${ACE_ROOT}/TAO/orbsvcs:${MPC_ROOT}:${CIAO_ROOT}:${DANCE_ROOT}:${DDS_ROOT}
#  export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}::${ACE_ROOT}/tao:${ACE_ROOT}/lib:${ACE_ROOT}/TAO/orbsvcs:${MPC_ROOT}:${CIAO_ROOT}:${DANCE_ROOT}:${DDS_ROOT}
#fi

export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/lib:/usr/lib

# Development library path, opt first, then debug
export LD_LIBRARY_PATH=${PROJECT_TARGET_PATH}/lib/${ARCH}/debug:${PROJECT_TARGET_PATH}/lib/${ARCH}/debug/shared:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=${PROJECT_TARGET_PATH}/lib/${ARCH}/opt:${PROJECT_TARGET_PATH}/lib/${ARCH}/opt/shared:${LD_LIBRARY_PATH}

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
