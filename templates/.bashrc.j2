# {{ ansible_managed }}
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
#HISTCONTROL=ignoredups
#HISTCONTROL=ignorespace
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE={{ HISTSIZE }}
HISTFILESIZE=2000

#for setting history format
HISTTIMEFORMAT="%F %T "

#for setting history ignore list
HISTIGNORE="&:vault*:pwd:clear:cd:cdr:ls:ll:man:history:exit"

#for history to work the same on each open terminal
shopt -s histappend
PROMPT_COMMAND='history -a'

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

# GIT specific
source ~/.git-prompt.sh

if [ "$color_prompt" = yes ]; then
 #PS1='${debian_chroot:+($debian_chroot)}\[\e[1;32m\][\u\[\e[m\]@\[\e[1;33m\]\h\[\e[1;34m\] \w]\[\e[1;36m\] $(__git_ps1 " (%s)") \$\[\e[1;37m\] '
  PS1='${debian_chroot:+($debian_chroot)}\[\e[1;32m\][\u\[\e[m\]@\[\e[1;33m\]\h\[\e[1;34m\]:\w]\[\e[1;36m\]'
else
  PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

if [ -d "${HOME}/.linuxbrew/bin" -o -d "${HOME}/.git-radar" -o -f "/home/linuxbrew/.linuxbrew/bin/git-radar" ]; then
  PS1="$PS1\$(git-radar --bash --fetch 2>&1)"
else
  PS1=$PS1'$(__git_ps1 "(%s)")'
fi

if [ "$color_prompt" = yes ]; then
  PS1="$PS1 ðŸ¦Š \$ \[\e[1;37m\]"
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
  PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
  ;;
*)
  ;;
esac

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Add hand made color for better display
if [ -f ~/step-0-color.sh ]; then
  . ~/step-0-color.sh
fi

#export GIT_RADAR_COLOR_BRANCH='\033[0;36m'

##
# XXXXXXXXXXXXXXXXXXXXX
##

export PROJECT_USER={{PROJECT_USER}}
export PROJECT_VERSION={{PROJECT_VERSION}}
export DRIVE_PATH={{DRIVE_PATH}}
export PROJECT_HOME={{PROJECT_HOME}}
# Do not use hudson workspace
export WORKSPACE_ENV={{WORKSPACE_ENV}}

#export PROJECT_THIRDPARTY_PATH={{PROJECT_THIRDPARTY_PATH}}
#echo PROJECT_THIRDPARTY_PATH : ${PROJECT_THIRDPARTY_PATH}

#If you want to use new GCC by default, make sure that your PATH contains /usr/local/bin before /bin and /usr/bin.
PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
# set PATH so it includes user's private bin if it exists
#if [ -d "$HOME/bin" ] ; then
#    PATH="$HOME/bin:$PATH"
#fi

#echo "SHELL : ${SHELL}"

alias 00='. ${PROJECT_HOME}/${PROJECT_USER}00/env/home/dev.env.sh'
alias {{DEFAULT_ENV_LOADED}}='. ${WORKSPACE_ENV}/home/dev.env.sh'

if [ -f ${WORKSPACE_ENV}/home/dev.env.sh ]; then
  echo ${WORKSPACE_ENV}/home/dev.env.sh
  . ${WORKSPACE_ENV}/home/dev.env.sh
fi

echo "Set your environment with {{DEFAULT_ENV_LOADED}} alias."

source /opt/ansible/env38/bin/activate  # commented out by conda initialize

# https://symfony.com/doc/5.4/configuration/front_controllers_and_kernel.html#debug-mode
# set it to 1 to enable the debug mode
APP_DEBUG=0

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

complete -C /usr/bin/terraform terraform
complete -C /usr/bin/nomad nomad

#complete -C /media/albanandrieu/data/jm/infra/hashistack-cluster/.direnv/bin/terraform terraform
complete -C /home/linuxbrew/.linuxbrew/Cellar/mc/RELEASE.2023-01-11T03-14-16Z_1/bin/mc mc

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#. torsocks on
